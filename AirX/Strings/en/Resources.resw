<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutAirX.Text" xml:space="preserve">
    <value>About AirX</value>
  </data>
  <data name="AirXCloudServer.Description" xml:space="preserve">
    <value>Only connect to private servers you trust.</value>
  </data>
  <data name="AirXCloudServer.Text" xml:space="preserve">
    <value>AirX Cloud Server</value>
  </data>
  <data name="AirXControlPanel.Text" xml:space="preserve">
    <value>AirX Control Panel</value>
  </data>
  <data name="AirXCore.Text" xml:space="preserve">
    <value>AirX Core</value>
  </data>
  <data name="AirXIsOffline.Text" xml:space="preserve">
    <value>Can't connect to AirX Cloud</value>
  </data>
  <data name="AirXIsOnline.Text" xml:space="preserve">
    <value>Connected to AirX Cloud</value>
  </data>
  <data name="AirXTheTextFileSyncTool.Text" xml:space="preserve">
    <value>AirX - Text/File Sync Tool</value>
  </data>
  <data name="Build.Text" xml:space="preserve">
    <value>Build</value>
  </data>
  <data name="ConfirmSignIn.Text" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="Contacts.Text" xml:space="preserve">
    <value>Contacts</value>
  </data>
  <data name="Copyright.Text" xml:space="preserve">
    <value>Copyright</value>
  </data>
  <data name="CreateOne.Text" xml:space="preserve">
    <value>Create One!</value>
  </data>
  <data name="DashBoard.Text" xml:space="preserve">
    <value>Dashboard</value>
  </data>
  <data name="Debug.Text" xml:space="preserve">
    <value>Debug</value>
  </data>
  <data name="EnhancedDiscovery.Description" xml:space="preserve">
    <value>Periodically send LAN discovery packets to ensure peer list up to date. May increase load to the router, especially for large amount of AirX users under the same network.</value>
  </data>
  <data name="EnhancedDiscovery.Text" xml:space="preserve">
    <value>Enhanced Discovery</value>
  </data>
  <data name="Exit.Text" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="Hooray.Text" xml:space="preserve">
    <value>\^O^/</value>
  </data>
  <data name="LANDataServiceListenAddress.Text" xml:space="preserve">
    <value>LAN Data Service Listen Address (IpV4)</value>
  </data>
  <data name="LANDataServiceListenPort.Description" xml:space="preserve">
    <value>Range: 1024 ~ 65535 (Inclusive)</value>
  </data>
  <data name="LANDataServiceListenPort.Text" xml:space="preserve">
    <value>LAN Data Service Listen Port</value>
  </data>
  <data name="LANDiscoveryClientPort.Description" xml:space="preserve">
    <value>Range: 0 or 1024 ~ 65535 (Inclusive)</value>
  </data>
  <data name="LANDiscoveryClientPort.Text" xml:space="preserve">
    <value>LAN Discovery Client Port</value>
  </data>
  <data name="LANDiscoveryServerPort.Description" xml:space="preserve">
    <value>Range: 1024 ~ 65535 (Inclusive)</value>
  </data>
  <data name="LANDiscoveryServerPort.Text" xml:space="preserve">
    <value>LAN Discovery Server Port</value>
  </data>
  <data name="LANGroupIdentifier.Description" xml:space="preserve">
    <value>Range: 0 ~ 255 (Inclusive). Only devices with the same group identity can discover each other.</value>
  </data>
  <data name="LANGroupIdentifier.Text" xml:space="preserve">
    <value>LAN Group Identifier</value>
  </data>
  <data name="LanguagePack.Text" xml:space="preserve">
    <value>Language Pack</value>
  </data>
  <data name="NoAirXAccountYet.Text" xml:space="preserve">
    <value>No AirX Account?</value>
  </data>
  <data name="OpenControlPanel.Text" xml:space="preserve">
    <value>Open Control Panel</value>
  </data>
  <data name="Password.Text" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Preferences.Text" xml:space="preserve">
    <value>Preferences</value>
  </data>
  <data name="ReceiveClipboardFromInternet.Description" xml:space="preserve">
    <value>Enable to accept peers' clipboard data from the Internet.</value>
  </data>
  <data name="ReceiveClipboardFromInternet.Text" xml:space="preserve">
    <value>Receive Clipboard From Internet</value>
  </data>
  <data name="ReceivedFiles.Text" xml:space="preserve">
    <value>Received Files</value>
  </data>
  <data name="RememberMe.Text" xml:space="preserve">
    <value>Remember Me</value>
  </data>
  <data name="SendFile.Text" xml:space="preserve">
    <value>Send Files</value>
  </data>
  <data name="SentFiles.Text" xml:space="preserve">
    <value>Sent Files</value>
  </data>
  <data name="ShareClipboardOverInternet.Description" xml:space="preserve">
    <value>Agree and enable to share clipboard data over the Internet. Relavent data will be uploaded to AirX cloud.</value>
  </data>
  <data name="ShareClipboardOverInternet.Text" xml:space="preserve">
    <value>Share Clipboard Over Internet</value>
  </data>
  <data name="ShowAdvancedSettings.Description" xml:space="preserve">
    <value>Please be sure you understand it before changing any advanced settings.</value>
  </data>
  <data name="ShowAdvancedSettings.Text" xml:space="preserve">
    <value>Show Advanced Settings</value>
  </data>
  <data name="ShowDeveloperConsole.Description" xml:space="preserve">
    <value>Enables debug output from libairx.</value>
  </data>
  <data name="ShowDeveloperConsole.Text" xml:space="preserve">
    <value>Show Developer Console</value>
  </data>
  <data name="SignIn.Text" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="SignOut.Text" xml:space="preserve">
    <value>Sign Out</value>
  </data>
  <data name="SignUp.Text" xml:space="preserve">
    <value>Sign Up</value>
  </data>
  <data name="StartService.Text" xml:space="preserve">
    <value>Start Service</value>
  </data>
  <data name="StopService.Text" xml:space="preserve">
    <value>Stop Service</value>
  </data>
  <data name="TextPopupDisplayTime.Description" xml:space="preserve">
    <value>Range: 1000 ~ 10000 (Inclusive)</value>
  </data>
  <data name="TextPopupDisplayTime.Text" xml:space="preserve">
    <value>Text Popup Display Time (ms)</value>
  </data>
  <data name="UidOrEmail.Text" xml:space="preserve">
    <value>UID/Email</value>
  </data>
  <data name="Version.Text" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="VersionCode.Text" xml:space="preserve">
    <value>Version Code</value>
  </data>
  <data name="WindowsFrontend.Text" xml:space="preserve">
    <value>Windows Frontend</value>
  </data>
</root>